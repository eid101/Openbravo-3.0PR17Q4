<?xml version="1.0"?>
  <database name="FUNCTION M_GET_OFFERS_APPLIED">
    <function name="M_GET_OFFERS_APPLIED" type="VARCHAR">
      <parameter name="p_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_type" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[/*************************************************************************
* The contents of this file are subject to the Openbravo  Public  License
* Version  1.1  (the  "License"),  being   the  Mozilla   Public  License
* Version 1.1  with a permitted attribution clause; you may not  use this
* file except in compliance with the License. You  may  obtain  a copy of
* the License at http://www.openbravo.com/legal/license.html
* Software distributed under the License  is  distributed  on  an "AS IS"
* basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
* License for the specific  language  governing  rights  and  limitations
* under the License.
* The Original Code is Openbravo ERP.
* The Initial Developer of the Original Code is Openbravo SLU
* All portions are Copyright (C) 2001-2006 Openbravo SLU
* All Rights Reserved.
* Contributor(s):  ______________________________________.
************************************************************************/
  TYPE RECORD IS REF CURSOR;
  CurOffers RECORD;

  v_offers VARCHAR2(500);
BEGIN
  IF p_Type = 'I' THEN --invoice
    FOR CurOffers IN (SELECT o.addamt, o.discount, o.fixed, cursymbol
                        FROM C_InvoiceLine_Offer io,
                             M_Offer             o,
                             C_Currency          c,
                             C_Invoice           i,
                             C_InvoiceLine       il
                       WHERE o.M_Offer_ID = io.M_Offer_ID
                         AND c.C_Currency_ID = i.C_Currency_ID
                         AND i.C_Invoice_ID  = il.C_Invoice_ID
                         AND il.C_InvoiceLine_ID = io.C_InvoiceLine_ID
                         AND il.C_InvoiceLine_ID = p_Id
                       ORDER BY COALESCE(io.line,0)) LOOP
      IF CurOffers.Fixed IS NOT NULL THEN
        IF v_Offers IS NOT NULL THEN
          v_Offers := v_Offers || ' + ';
        END IF;
        v_Offers := v_Offers || 'F: ' || CurOffers.Fixed ||CurOffers.CurSymbol;
      ELSE
        IF COALESCE(CurOffers.AddAmt,0) <> 0 THEN
          IF v_Offers IS NOT NULL THEN
            v_Offers := v_Offers || ' + ';
          END IF;
          v_Offers := v_Offers || CurOffers.AddAmt || CurOffers.CurSymbol;
        END IF;

        IF COALESCE(CurOffers.Discount,0) <> 0 THEN
          IF v_Offers IS NOT NULL THEN
            v_Offers := v_Offers || ' + ';
          END IF;
          v_Offers := v_Offers || CurOffers.Discount || '%';
        END IF;
      END IF;
    END LOOP;
  ELSE                 --order
    FOR CurOffers IN (SELECT o.addamt, o.discount, o.fixed, cursymbol
                        FROM C_OrderLine_Offer io,
                             M_Offer             o,
                             C_Currency          c,
                             C_Order             i,
                             C_OrderLine       il
                       WHERE o.M_Offer_ID = io.M_Offer_ID
                         AND c.C_Currency_ID = i.C_Currency_ID
                         AND i.C_Order_ID  = il.C_Order_ID
                         AND il.C_OrderLine_ID = io.C_OrderLine_ID
                         AND il.C_OrderLine_ID = p_Id
                       ORDER BY COALESCE(io.line,0)) LOOP
      IF CurOffers.Fixed IS NOT NULL THEN
        IF v_Offers IS NOT NULL THEN
          v_Offers := v_Offers || ' + ';
        END IF;
        v_Offers := v_Offers || 'F: ' || CurOffers.Fixed || CurOffers.CurSymbol;
      ELSE
        IF COALESCE(CurOffers.AddAmt,0) <> 0 THEN
          IF v_Offers IS NOT NULL THEN
            v_Offers := v_Offers || ' + ';
          END IF;
          v_Offers := v_Offers || CurOffers.AddAmt || CurOffers.CurSymbol;
        END IF;

        IF COALESCE(CurOffers.Discount,0) <> 0 THEN
          IF v_Offers IS NOT NULL THEN
            v_Offers := v_Offers || ' + ';
          END IF;
          v_Offers := v_Offers || CurOffers.Discount || '%';
        END IF;
      END IF;
    END LOOP;
  END IF;
  RETURN v_Offers;
END M_GET_OFFERS_APPLIED
]]></body>
    </function>
  </database>
