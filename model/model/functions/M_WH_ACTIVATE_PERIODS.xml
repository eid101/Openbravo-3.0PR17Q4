<?xml version="1.0"?>
  <database name="FUNCTION M_WH_ACTIVATE_PERIODS">
    <function name="M_WH_ACTIVATE_PERIODS" type="NULL">
      <parameter name="p_pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[/*************************************************************************
* The contents of this file are subject to the Openbravo  Public  License
* Version  1.0  (the  "License"),  being   the  Mozilla   Public  License
* Version 1.1  with a permitted attribution clause; you may not  use this
* file except in compliance with the License. You  may  obtain  a copy of
* the License at http://www.openbravo.com/legal/license.html
* Software distributed under the License  is  distributed  on  an "AS IS"
* basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
* License for the specific  language  governing  rights  and  limitations
* under the License.
* The Original Code is Openbravo ERP.
* The Initial Developer of the Original Code is Openbravo SL
* All portions are Copyright (C) 2001-2006 Openbravo SL
* All Rights Reserved.
* Contributor(s):  ______________________________________.
************************************************************************/
  -- Parameter
  TYPE RECORD IS REF CURSOR;
    Cur_Parameter RECORD;
    v_WHSchedule_ID VARCHAR2(32);
    v_DateFrom DATE;
    v_DateTo DATE;
    v_Activate CHAR(1) ;
    --
    v_no NUMBER;
    v_count NUMBER;
    v_nextNo VARCHAR2(32) ;
    v_startDate DATE;
    v_endDate DATE;
    v_ResultStr VARCHAR(60) ;
    --  WHSchedule Variables
    v_Client_ID VARCHAR2(32);
    v_Org_ID VARCHAR2(32);
    v_User_ID VARCHAR2(32);
  BEGIN
    --  Update AD_PInstance
    v_ResultStr:='PInstanceNotFound';
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'Y', NULL, NULL) ;
  BEGIN --BODY
    -- Get Parameters
    v_ResultStr:='ReadingParameters';
    FOR Cur_Parameter IN
      (SELECT i.Record_ID,
        p.ParameterName,
        p.P_String,
        p.P_Number,
        p.P_Date,
        i.CreatedBy
      FROM AD_PInstance i
      LEFT JOIN AD_PInstance_Para p
        ON i.AD_PInstance_ID=p.AD_PInstance_ID
      WHERE i.AD_PInstance_ID=p_PInstance_ID
      ORDER BY p.SeqNo
      )
    LOOP
      v_WHSchedule_ID:=Cur_Parameter.Record_ID;
      DBMS_OUTPUT.PUT_LINE('  Record_ID=' || v_WHSchedule_ID) ;
      v_User_ID:=Cur_Parameter.CreatedBy;
      IF(Cur_Parameter.ParameterName='DateFrom') THEN
        v_DateFrom:=Cur_Parameter.P_Date;
        DBMS_OUTPUT.PUT_LINE('  DateFrom=' || v_DateFrom) ;
      ELSIF(Cur_Parameter.ParameterName='DateTo') THEN
        v_DateTo:=Cur_Parameter.P_Date;
        DBMS_OUTPUT.PUT_LINE('  DateTo=' || v_DateTo) ;
      ELSIF(Cur_Parameter.ParameterName='Activate') THEN
        v_Activate:=Cur_Parameter.P_String;
        DBMS_OUTPUT.PUT_LINE('  Activate=' || v_Activate) ;
      ELSE
        DBMS_OUTPUT.PUT_LINE('*** Unknown Parameter=' || Cur_Parameter.ParameterName) ;
      END IF;
    END LOOP; -- Get Parameter
    --  Get C_Year Record
    DBMS_OUTPUT.PUT_LINE('Get Year info') ;
    v_ResultStr:='YearNotFound';
    SELECT AD_Client_ID,
      AD_Org_ID
    INTO v_Client_ID,
      v_Org_ID
    FROM M_WH_Schedule
    WHERE M_WH_Schedule_ID=v_WHSchedule_ID;
    UPDATE M_WH_PERIOD
      SET ISACTIVE=v_Activate
    WHERE M_WH_PERIOD_ID IN
      ( SELECT M_WH_PERIOD.M_WH_PERIOD_ID
      FROM M_WH_SCHEDULE,
        M_WH_PERIOD
      WHERE M_WH_SCHEDULE.M_WH_SCHEDULE_ID=M_WH_PERIOD.M_WH_SCHEDULE_ID
        AND M_WH_SCHEDULE.M_WH_SCHEDULE_ID=v_WHSchedule_ID
        AND M_WH_PERIOD.STARTDATE>=v_DateFrom
        AND M_WH_PERIOD.ENDDATE<=v_DateTo
      )
      ;
    --  Update AD_PInstance
    --<<END_PROCEDURE>>
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 1, NULL) ;
    RETURN;
  END; --BODY
EXCEPTION
WHEN OTHERS THEN
  v_ResultStr:= '@ERROR=' || SQLERRM;
  DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
  ROLLBACK;
  IF(p_PInstance_ID IS NOT NULL) THEN
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
  END IF;
  RETURN;
END M_WH_ACTIVATE_PERIODS
]]></body>
    </function>
  </database>
