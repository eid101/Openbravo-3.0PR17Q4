<?xml version="1.0"?>
  <database name="FUNCTION M_WH_PERIOD_GENERATE">
    <function name="M_WH_PERIOD_GENERATE" type="NULL">
      <parameter name="pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[/*************************************************************************
* The contents of this file are subject to the Openbravo  Public  License
* Version  1.0  (the  "License"),  being   the  Mozilla   Public  License
* Version 1.1  with a permitted attribution clause; you may not  use this
* file except in compliance with the License. You  may  obtain  a copy of
* the License at http://www.openbravo.com/legal/license.html
* Software distributed under the License  is  distributed  on  an "AS IS"
* basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
* License for the specific  language  governing  rights  and  limitations
* under the License.
* The Original Code is Openbravo ERP.
* The Initial Developer of the Original Code is Openbravo SLU
* All portions are Copyright (C) 2001-2006 Openbravo SLU
* All Rights Reserved.
* Contributor(s):  ______________________________________.
************************************************************************/
  -- Parameter
  TYPE RECORD IS REF CURSOR;
    Cur_Parameter RECORD;
    v_WHSchedule_ID VARCHAR2(32);
    v_DateFrom DATE;
    v_DateTo DATE;
    --
    v_no NUMBER;
    v_count NUMBER;
    v_nextNo VARCHAR2(32) ;
    v_startDate DATE;
    v_endDate DATE;
    v_ResultStr VARCHAR(60) ;
    --  WHSchedule Variables
    v_Client_ID VARCHAR2(32);
    v_Org_ID VARCHAR2(32);
    v_Periodicity VARCHAR2(60) ;
    v_User_ID VARCHAR2(32);
  BEGIN
    --  Update AD_PInstance
    v_ResultStr:='PInstanceNotFound';
    AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'Y', NULL, NULL) ;
  BEGIN --BODY
    -- Get Parameters
    v_ResultStr:='ReadingParameters';
    FOR Cur_Parameter IN
      (SELECT i.Record_ID,
        p.ParameterName,
        p.P_String,
        p.P_Number,
        p.P_Date,
        i.CreatedBy
      FROM AD_PInstance i
      LEFT JOIN AD_PInstance_Para p
        ON i.AD_PInstance_ID=p.AD_PInstance_ID
      WHERE i.AD_PInstance_ID=PInstance_ID
      ORDER BY p.SeqNo
      )
    LOOP
      v_WHSchedule_ID:=Cur_Parameter.Record_ID;
      DBMS_OUTPUT.PUT_LINE('  Record_ID=' || v_WHSchedule_ID) ;
      v_User_ID:=Cur_Parameter.CreatedBy;
      IF(Cur_Parameter.ParameterName='DateFrom') THEN
        v_DateFrom:=Cur_Parameter.P_Date;
        DBMS_OUTPUT.PUT_LINE('  DateFrom=' || v_DateFrom) ;
      ELSIF(Cur_Parameter.ParameterName='DateTo') THEN
        v_DateTo:=Cur_Parameter.P_Date;
        DBMS_OUTPUT.PUT_LINE('  DateTo=' || v_DateTo) ;
      ELSE
        DBMS_OUTPUT.PUT_LINE('*** Unknown Parameter=' || Cur_Parameter.ParameterName) ;
      END IF;
    END LOOP; -- Get Parameter
    --  Get C_Year Record
    DBMS_OUTPUT.PUT_LINE('Get Year info') ;
    v_ResultStr:='YearNotFound';
    SELECT AD_Client_ID,
      AD_Org_ID,
      Periodicity
    INTO v_Client_ID,
      v_Org_ID,
      v_Periodicity
    FROM M_WH_Schedule
    WHERE M_WH_Schedule_ID=v_WHSchedule_ID;
    IF(v_Periodicity='D') THEN --daily
      v_startDate:=v_DateFrom;
    ELSIF(v_Periodicity='F') THEN --Fortnightly
      IF(TO_NUMBER(TO_CHAR(v_DateFrom, 'DD'))=1) THEN
        v_startDate:=v_DateFrom;
      ELSIF(TO_NUMBER(TO_CHAR(v_DateFrom, 'DD'))>15) THEN
        v_startDate:=TO_DATE('01/'||TO_CHAR(ADD_MONTHS(v_startDate, 1), 'MM/YYYY'), 'DD/MM/YYYY') ;
      ELSE
        v_startDate:=TO_DATE('01/'||TO_CHAR(v_startDate, 'MM/YYYY'), 'DD/MM/YYYY') ;
      END IF;
    ELSIF(v_Periodicity='M') THEN
      IF(TO_NUMBER(TO_CHAR(v_DateFrom, 'DD'))=1) THEN
        v_startDate:=v_DateFrom;
      ELSE
        v_startDate:=TO_DATE('01/'||TO_CHAR(ADD_MONTHS(v_startDate, 1), 'MM/YYYY'), 'DD/MM/YYYY') ;
      END IF;
    END IF;
    FOR v_no IN 1..1000
    LOOP -- max number of periods inserted: 1000
      IF(v_startDate>v_DateTo) THEN
        EXIT; -- Stop inserting
      END IF;
      IF(v_Periodicity='D') THEN
        v_endDate:=v_startDate;
      ELSIF(v_Periodicity='F') THEN
        IF(TO_NUMBER(TO_CHAR(v_startDate, 'DD'))=1) THEN
          v_endDate:=TO_DATE('15/'||TO_CHAR(v_startDate, 'MM/YYYY'), 'DD/MM/YYYY') ;
        ELSE
          v_endDate:=LAST_DAY(v_startDate) ;
        END IF;
      ELSE
        v_endDate:=LAST_DAY(v_startDate) ;
      END IF;
      --  Do we have the period already:1
      v_ResultStr:='Checking Period no: '||v_no;
      SELECT COUNT(*)
      INTO v_count
      FROM M_WH_PERIOD
      WHERE M_WH_Schedule_ID=v_WHSchedule_ID
        AND STARTDATE=v_startDate;
      IF v_count=0 THEN
        -- get new NextNo
        AD_Sequence_Next('M_WH_Period', v_WHSchedule_ID, v_nextNo) ;
        INSERT
        INTO M_WH_Period
          (
            M_WH_Period_ID, AD_Client_ID, AD_Org_ID, IsActive,
            Created, CreatedBy, Updated, UpdatedBy,
            M_WH_Schedule_ID, StartDate, EndDate)
          VALUES
          (
            v_nextNo, v_Client_ID, v_Org_ID, 'Y',
            now(), v_User_ID, now(), v_User_ID,
            v_WHSchedule_ID, v_startDate, v_endDate)
          ;
        DBMS_OUTPUT.PUT_LINE('Period Added') ;
      END IF;
      --next Date
      IF(v_Periodicity='D') THEN
        v_startDate:=v_startDate + 1;
      ELSIF(v_Periodicity='F') THEN
        IF(TO_NUMBER(TO_CHAR(v_startDate, 'DD'))=1) THEN
          v_startDate:=TO_DATE('16/'||TO_CHAR(v_startDate, 'MM/YYYY'), 'DD/MM/YYYY') ;
        ELSE
          v_startDate:=TO_DATE('01/'||TO_CHAR(ADD_MONTHS(v_startDate, 1), 'MM/YYYY'), 'DD/MM/YYYY') ;
        END IF;
      ELSE
        v_startDate:=ADD_MONTHS(v_startDate, 1) ;
      END IF;
    END LOOP;
    --  Update AD_PInstance
    --<<END_PROCEDURE>>
    AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'N', 1, NULL) ;
    RETURN;
  END; --BODY
EXCEPTION
WHEN OTHERS THEN
  v_ResultStr:= '@ERROR=' || SQLERRM;
  DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
  ROLLBACK;
  IF(PInstance_ID IS NOT NULL) THEN
    AD_UPDATE_PINSTANCE(PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
  END IF;
  RETURN;
END M_WH_PERIOD_GENERATE
]]></body>
    </function>
  </database>
