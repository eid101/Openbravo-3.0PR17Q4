<?xml version="1.0"?>
  <database name="FUNCTION AT_TEST_COPY">
    <function name="AT_TEST_COPY" type="NULL">
      <parameter name="p_pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[/*************************************************************************
* The contents of this file are subject to the Openbravo  Public  License
* Version  1.0  (the  "License"),  being   the  Mozilla   Public  License
* Version 1.1  with a permitted attribution clause; you may not  use this
* file except in compliance with the License. You  may  obtain  a copy of
* the License at http://www.openbravo.com/legal/license.html
* Software distributed under the License  is  distributed  on  an "AS IS"
* basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
* License for the specific  language  governing  rights  and  limitations
* under the License.
* The Original Code is Openbravo ERP.
* The Initial Developer of the Original Code is Openbravo SL
* All portions are Copyright (C) 2001-2006 Openbravo SL
* All Rights Reserved.
* Contributor(s):  ______________________________________.
************************************************************************/
  -- Logistice
  v_ResultStr VARCHAR2(2000):='';
  v_Message VARCHAR2(2000):='';
  v_Record_ID VARCHAR2(32);
  -- Parameter
  TYPE RECORD IS REF CURSOR;
    Cur_Parameter RECORD;
    -- Parameter Variables
    v_AT_Test_ID VARCHAR2(32);
    v_NextNo VARCHAR2(32);
    v_NoOfLines NUMBER:=0;
    v_MaxSeqNo NUMBER;
    Cur_Lines RECORD;
  BEGIN
    --  Update AD_PInstance
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || p_PInstance_ID) ;
    v_ResultStr:='PInstanceNotFound';
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'Y', NULL, NULL) ;
  BEGIN --BODY
    -- Get Parameters
    v_ResultStr:='ReadingParameters';
    FOR Cur_Parameter IN
      (SELECT i.Record_ID, p.ParameterName, p.P_String, p.P_Number, p.P_Date
      FROM AD_PInstance i
      LEFT JOIN AD_PInstance_Para p
        ON i.AD_PInstance_ID=p.AD_PInstance_ID
      WHERE i.AD_PInstance_ID=p_PInstance_ID
      ORDER BY p.SeqNo
      )
    LOOP
      v_Record_ID:=Cur_Parameter.Record_ID;
      IF(Cur_Parameter.ParameterName='AT_Test_ID') THEN
        v_AT_Test_ID:=Cur_Parameter.P_String;
        DBMS_OUTPUT.PUT_LINE('  AT_Test_ID=' || v_AT_Test_ID) ;
      ELSE
        DBMS_OUTPUT.PUT_LINE('*** Unknown Parameter=' || Cur_Parameter.ParameterName) ;
      END IF;
    END LOOP; -- Get Parameter
    DBMS_OUTPUT.PUT_LINE('  Record_ID=' || v_Record_ID) ;
    SELECT CASE WHEN max(SeqNo) is NULL THEN 0 ELSE max(SeqNo)
      END
    INTO v_MaxSeqNo
    FROM AT_Line
    WHERE AT_Test_ID=v_Record_ID;
    -- Record_ID is the Test_ID to copy to
    v_ResultStr:='InsertLines';
    FOR Cur_Lines IN
      (SELECT *  FROM AT_LINE  WHERE AT_Test_ID=v_AT_Test_ID)
    LOOP
      -- Get next no
      AD_Sequence_Next('AT_Line', Cur_Lines.AD_Client_ID, v_NextNo) ;
      -- Insert
      INSERT
      INTO AT_Line
        (
          AT_LINE_ID, AT_TEST_ID, AD_CLIENT_ID, AD_ORG_ID,
          ISACTIVE, CREATED, CREATEDBY, UPDATED, UPDATEDBY,
          AT_COMMAND_ID, SEQNO, ARG1, ARG2,
          ARG3, TYPE, CHILD_TEST, ARGNO,
          ARGHELP1, ARGHELP2, ARGHELP3
        )
        VALUES
        (v_NextNo, v_Record_ID, Cur_Lines.AD_CLIENT_ID, Cur_Lines.AD_ORG_ID,
        Cur_Lines.ISACTIVE, now(), Cur_Lines.CREATEDBY, now(),
        Cur_Lines.UPDATEDBY, Cur_Lines.AT_COMMAND_ID, Cur_Lines.SEQNO + v_MaxSeqNo, Cur_Lines.ARG1,
        Cur_Lines.ARG2, Cur_Lines.ARG3, Cur_Lines.TYPE, Cur_Lines.CHILD_TEST,
        Cur_Lines.ARGNO, Cur_Lines.ARGHELP1, Cur_Lines.ARGHELP2, Cur_Lines.ARGHELP3) ;
      v_NoOfLines:=v_NoOfLines + 1;
    END LOOP; -- Line
    v_Message:='@Copied@=' || v_NoOfLines || ' lines';
    --<<FINISH_PROCESS>>
    --  Update AD_PInstance
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Finished ' || v_Message) ;
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 1, v_Message) ;
    RETURN;
  END; --BODY
EXCEPTION
WHEN OTHERS THEN
  v_ResultStr:= '@ERROR=' || SQLERRM;
  DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
  AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
  RETURN;
END AT_TEST_COPY
]]></body>
    </function>
  </database>
