<?xml version="1.0"?>
  <database name="TRIGGER M_TRANSACTION_TRG">
    <trigger name="M_TRANSACTION_TRG" table="M_TRANSACTION" fires="after" insert="true" update="true" delete="true" foreach="row">
      <body><![CDATA[




/*************************************************************************
* The contents of this file are subject to the Openbravo  Public  License
* Version  1.0  (the  "License"),  being   the  Mozilla   Public  License
* Version 1.1  with a permitted attribution clause; you may not  use this
* file except in compliance with the License. You  may  obtain  a copy of
* the License at http://www.openbravo.com/legal/license.html
* Software distributed under the License  is  distributed  on  an "AS IS"
* basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
* License for the specific  language  governing  rights  and  limitations
* under the License.
* The Original Code is Openbravo ERP.
* The Initial Developer of the Original Code is Openbravo SL
* All portions are Copyright (C) 2001-2006 Openbravo SL
* All Rights Reserved.
* Contributor(s):  ______________________________________.
************************************************************************/
  v_DATEINVENTORY DATE;
  v_UOM_ID VARCHAR2(32) ;
  v_ATTRIBUTESET_ID VARCHAR2(32);
  v_Name NVARCHAR2(60);
    
BEGIN
    
    IF AD_isTriggerEnabled()='N' THEN RETURN;
    END IF;


  IF INSERTING OR UPDATING THEN
    SELECT C_UOM_ID, M_ATTRIBUTESET_ID, name
    INTO v_UOM_ID, v_attributeset_id, v_name
    FROM M_PRODUCT
    WHERE M_PRODUCT_ID=:NEW.M_PRODUCT_ID;
    IF(COALESCE(v_UOM_ID, '0') <> COALESCE(:NEW.C_UOM_ID, '0')) THEN
      RAISE_APPLICATION_ERROR(-20111, 'Unit of Measure mismatch (product/transaction)') ;
    END IF;
    IF(v_attributeset_id IS NOT NULL AND COALESCE(:NEW.M_ATTRIBUTESETINSTANCE_ID, '0') = '0') THEN
      RAISE_APPLICATION_ERROR(-20112, 'There are some products without attribute: ' || v_Name) ;
    END IF;
    SELECT MAX(MOVEMENTDATE)
    INTO v_DATEINVENTORY
    FROM M_INVENTORY I,
      M_INVENTORYLINE IL
    WHERE I.M_INVENTORY_ID=IL.M_INVENTORY_ID
      AND IL.M_INVENTORYLINE_ID=:NEW.M_INVENTORYLINE_ID;
  END IF;
  -- Updating inventory
  IF UPDATING OR DELETING THEN
    M_UPDATE_INVENTORY(:OLD.AD_CLIENT_ID, :OLD.AD_ORG_ID, :OLD.UPDATEDBY, :OLD.M_PRODUCT_ID, :OLD.M_LOCATOR_ID, :OLD.M_ATTRIBUTESETINSTANCE_ID, :OLD.C_UOM_ID, :OLD.M_PRODUCT_UOM_ID, -:OLD.MOVEMENTQTY, -:OLD.QUANTITYORDER, NULL, :OLD.MOVEMENTQTY, :OLD.QUANTITYORDER) ;
  END IF;
  IF INSERTING OR UPDATING THEN
    M_UPDATE_INVENTORY(:NEW.AD_CLIENT_ID, :NEW.AD_ORG_ID, :NEW.UPDATEDBY, :NEW.M_PRODUCT_ID, :NEW.M_LOCATOR_ID, :NEW.M_ATTRIBUTESETINSTANCE_ID, :NEW.C_UOM_ID, :NEW.M_PRODUCT_UOM_ID, :NEW.MOVEMENTQTY, :NEW.QUANTITYORDER, v_DATEINVENTORY, -:NEW.MOVEMENTQTY, -:NEW.QUANTITYORDER) ;
  END IF;
END M_TRANSACTION_TRG
]]></body>
    </trigger>
  </database>
