<?xml version="1.0"?>
  <database name="TRIGGER AD_FORM_TRG2">
    <trigger name="AD_FORM_TRG2" table="AD_FORM" fires="after" insert="true" update="true" delete="true" foreach="row">
      <body><![CDATA[




/*************************************************************************
* The contents of this file are subject to the Openbravo  Public  License
* Version  1.0  (the  "License"),  being   the  Mozilla   Public  License
* Version 1.1  with a permitted attribution clause; you may not  use this
* file except in compliance with the License. You  may  obtain  a copy of
* the License at http://www.openbravo.com/legal/license.html
* Software distributed under the License  is  distributed  on  an "AS IS"
* basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
* License for the specific  language  governing  rights  and  limitations
* under the License.
* The Original Code is Openbravo ERP.
* The Initial Developer of the Original Code is Openbravo SL
* All portions are Copyright (C) 2001-2006 Openbravo SL
* All Rights Reserved.
* Contributor(s):  ______________________________________.
************************************************************************/
  v_ID VARCHAR2(32) ;
  v_ID_MAP     VARCHAR2(32) ;
  v_WindowName VARCHAR2(60):='ad_forms';
  v_ClassName  VARCHAR2(60) ;
    
BEGIN
    
    IF AD_isTriggerEnabled()='N' THEN RETURN;
    END IF;


  IF(UPDATING) THEN
    IF NOT(COALESCE(:old.NAME, '.') <> COALESCE(:NEW.NAME, '.')
   OR COALESCE(:old.IsActive, '.') <> COALESCE(:NEW.IsActive, '.')
   OR COALESCE(:old.CLASSNAME, '.') <> COALESCE(:NEW.CLASSNAME, '.'))
  THEN
      RETURN;
    END IF;
  END IF;
  IF (UPDATING) THEN
    UPDATE AD_MODEL_OBJECT_MAPPING
    SET ISACTIVE = :new.isactive
    WHERE AD_MODEL_OBJECT_ID IN
      (
      SELECT AD_MODEL_OBJECT_ID
      FROM AD_MODEL_OBJECT
      WHERE AD_MODEL_OBJECT.AD_FORM_ID=:old.AD_FORM_ID
        AND ACTION='X'
      );
    UPDATE AD_MODEL_OBJECT
    SET ISACTIVE = :new.isactive
    WHERE ACTION='X'
      AND AD_MODEL_OBJECT.AD_FORM_ID=:OLD.AD_FORM_ID;
  END IF;
  IF(DELETING) THEN
    DELETE
    FROM AD_MODEL_OBJECT_MAPPING
    WHERE AD_MODEL_OBJECT_ID IN
      (
      SELECT AD_MODEL_OBJECT_ID
      FROM AD_MODEL_OBJECT
      WHERE AD_MODEL_OBJECT.AD_FORM_ID=:old.AD_FORM_ID
        AND ACTION='X'
      )
      ;
    DELETE
    FROM AD_MODEL_OBJECT
    WHERE ACTION='X'
      AND AD_MODEL_OBJECT.AD_FORM_ID=:OLD.AD_FORM_ID;
  END IF;
  IF(INSERTING) THEN
    v_ClassName:=:new.CLASSNAME;
    Ad_Sequence_Next('AD_Model_Object', :new.AD_Client_ID, v_ID) ;
    INSERT
    INTO AD_MODEL_OBJECT
      (
        AD_MODEL_OBJECT_ID, AD_CLIENT_ID, AD_ORG_ID,
        ISACTIVE, CREATED, CREATEDBY,
        UPDATED, UPDATEDBY, ACTION,
        AD_FORM_ID, CLASSNAME, ISDEFAULT
      )
      VALUES
      (
        v_ID, :new.AD_CLIENT_ID, :new.AD_ORG_ID,
        :new.ISACTIVE, now(), :new.CREATEDBY,
        now(), :new.UPDATEDBY, 'X',
        :new.AD_FORM_ID, v_ClassName, 'Y'
      )
      ;
    Ad_Sequence_Next('AD_Model_Object_Mapping', :new.AD_Client_ID, v_ID_MAP) ;
    INSERT
    INTO AD_MODEL_OBJECT_MAPPING
      (
        AD_MODEL_OBJECT_MAPPING_ID, AD_CLIENT_ID, AD_ORG_ID,
        ISACTIVE, CREATED, CREATEDBY,
        UPDATED, UPDATEDBY, AD_MODEL_OBJECT_ID,
        MAPPINGNAME, ISDEFAULT
      )
      VALUES
      (
        v_ID_MAP, :new.AD_CLIENT_ID, :new.AD_ORG_ID,
        :new.ISACTIVE, now(), :new.CREATEDBY,
        now(), :new.UPDATEDBY, v_ID,
        ('/' || v_WindowName || '/' || AD_MAPPING_FORMAT(:NEW.NAME) || '.html'), 'Y'
      )
      ;
  END IF;
END AD_FORM_TRG2
]]></body>
    </trigger>
  </database>
